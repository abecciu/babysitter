# Config file
# For example, a rack app

# This is a comment

# The bundles are created with a contained set of resources
# Here, we can set the resources available in the honeycombs
# directories to be copied (from the root filesystem) are 
# specified with the directive:
#  directories: <space separated directory listings>

directories: /var/lib/gems/1.8/ /etc/beehive/ /usr/lib/ruby/1.8/ 

# Executables that are to be included can be specified as follows:
#  executables: <space separated executable listings>
executables: ruby /usr/bin/irb /usr/bin/gem thin uuidgen

# Other files
files: openssl.so libcrypto.so.0.9.8 libssl.so.0.9.8 libz.so.1

# Root directories
root_dir: /Users/alerner/var/beehive/rack

# Run directories
run_dir: $ROOT_DIR/run/$APP_NAME/$BEE_SHA

# User
# user: auser
# group: fairchild

# Image to mount
image: $STORAGE_DIR/$APP_NAME/$BEE_SHA.tgz

# Skeleton directory
skel_dir: /var/honeycombs/$APP_TYPE

# Actions can be declared here with the phrasing
#   <action> "command"
# The actions that can be specified through the config 
# are as follows
# bundle, start, stop, mount, unmount, cleanup
# note that you can override actions
bundle: {
  env
  mkdir -p $STORAGE_DIR
  mkdir -p `dirname $BEE_IMAGE`
  cd $WORKING_DIR
  tar czf $BEE_IMAGE ./
}
start: {
  env
  cd $RUN_DIR
  tar -zxf $BEE_IMAGE && pwd
  thin -R $RUN_DIR/home/app/config.ru -p $BEE_PORT start
}
stop: "thin -R config.ru stop"
unmount: NULL
cleanup: {
  ls "/tmp"
}

# Hooks
# There are hooks that are run before and after an action is called
# These can be specified as follows:
# <action>.(before|after): "command"
# Note, these are independent of the action command
stop.after: do something
unmount.before: "touch /etc/unmounting"
