top_srcdir = @top_srcdir@
srcdir = @srcdir@
prefix = @prefix@

# Defines
OUT=test
LIB_SOURCE=honeycomb.l honeycomb.y
LIB_OBJ=y.tab.o lex.yy.o ../utils/print_utils.o ../babysitter/hc_support.o ../babysitter/honeycomb_config.o
CC=cc
GCC=g++
CPPFLAGS= -O2 -g3 -Wall -I ./ -I ../babysitter -I ../utils -I libs 
YACCFLAGS=-d -t
c_srcdir = $(top_srcdir)/c_src
INCLUDE+=-I . -I $(c_srcdir)/utils -I $(c_srcdir)/erl -I $(c_srcdir)/babysitter

default: all

all: yacc $(LIB_OBJ)

prereq:
	@echo "Building the parser"
	$(GCC) -c -o hc_support.o $(INCLUDE) $(CFLAGS) libs/hc_support.c
	$(GCC) -c -o honeycomb_config.o $(INCLUDE) $(CFLAGS) libs/honeycomb_config.c

clean:
	rm -rf *.o y.tab.h *.dSYM y.tab.o lex.yy.o lex.yy.c y.tab.c honeycomb.c
	
lex_honeycomb:
	lex honeycomb.l
	
lex.yy.o: lex_honeycomb
	$(CC) -c -o lex.yy.o $(CPPFLAGS) lex.yy.c
	
y.tab.h: honeycomb.c
	yacc $(YACCFLAGS) honeycomb.y

yacc: y.tab.h
	$(CC) -c -o y.tab.o $(CPPFLAGS) y.tab.c

test_hc_config: honeycomb.c y.tab.h hc_support.o $(LIB_OBJ)
	$(GCC) $(CPPFLAGS) -o $(OUT) test_hc_config.cpp $(LIB_OBJ) -ll

test_match: honeycomb.c y.tab.h test_hc_config.o $(LIB_OBJ)
	$(CC) $(CPPFLAGS) -o $(OUT)_parser honeycomb.c lex.yy.o hc_support.o -lfl
