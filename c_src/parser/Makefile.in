# Defines
OUT=test
LIB_SOURCE=honeycomb.l honeycomb.y
LIB_OBJ=y.tab.o lex.yy.o ../utils/print_utils.o ../babysitter/hc_support.o ../babysitter/honeycomb_config.o
CC=cc
GCC=g++
CPPFLAGS=-g -Wall -Werror -O2 -I ./ -I ../babysitter -I ../utils -I libs
YACCFLAGS=-d -t
top_srcdir = @top_srcdir@
srcdir = @srcdir@
prefix = @prefix@
c_srcdir = $(top_srcdir)/c_src
INCLUDE+=-I . -I $(c_srcdir)/utils -I $(c_srcdir)/erl -I $(c_srcdir)/babysitter

default: all

all: honeycomb.c y.tab.h $(LIB_OBJ)

prereq:
	@echo "Building the parser"
	$(GCC) -c -o hc_support.o $(INCLUDE) $(CFLAGS) libs/hc_support.c
	$(GCC) -c -o honeycomb_config.o $(INCLUDE) $(CFLAGS) libs/honeycomb_config.c

clean:
	rm -rf *.o y.tab.h *.dSYM
	
lex:
	lex honeycomb.l

.c.o: $(SRCS) $(HDR)
	$(CC) -c -o $*.o $(CPPFLAGS) $*.c

y.tab.h: lex honeycomb.y 
	yacc $(YACCFLAGS) honeycomb.y

test_hc_config: honeycomb.c y.tab.h hc_support.o $(LIB_OBJ)
	$(GCC) $(CPPFLAGS) -o $(OUT) test_hc_config.cpp $(LIB_OBJ) -ll

test_match: honeycomb.c y.tab.h test_hc_config.o $(LIB_OBJ)
	$(CC) $(CPPFLAGS) -o $(OUT)_parser honeycomb.c lex.yy.o hc_support.o -lfl