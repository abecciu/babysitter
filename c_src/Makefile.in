SHELL = /bin/sh
VPATH = @srcdir@
 
top_srcdir = @top_srcdir@
srcdir = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = $(exec_prefix)/bin
infodir = $(prefix)/info
libdir = $(prefix)/lib/gnudl
mandir = $(prefix)/man/man1
INCLUDE+=-I ./parser -I$(top_srcdir)/build/readline/include -I./utils -I./erl -I./babysitter
CPPFLAGS+=$(INCLUDE)
CFLAGS = $(CPPFLAGS) @CFLAGS@
ERL_INTERFACE=${ERLDIR}/lib/${ERL_INTERFACE}
PARSER_LIBS = $(top_srcdir)/c/parser/y.tab.o $(top_srcdir)/c/parser/lex.yy.o
INC_LIBS = -L@EI_LIB_DIR@ -lerl_interface -lei -lstdc++ -lfl
EXECUTABLE_DIR = $(top_srcdir)/priv/bin

ifeq ($(shell uname),Linux)
	ARCH=linux
	LDFLAGS=$(LDFLAGS_COMMON) -shared
else
	ARCH=macosx
	LDFLAGS=$(LDFLAGS_COMMON) -dynamic -bundle -undefined suppress -flat_namespace
endif

# Defines
CC = g++
CPPFLAGS = @CPPFLAGS@
LIBS = @LIBS@
TEST_SOURCES := $(wildcard check_*.cpp)
TEST_OBJECTS := $(patsubst %.cpp,%.o,$(TEST_SOURCES))
UNDER_TEST := $(patsubst check_%.cpp,%.o,$(TEST_SOURCES))
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_VERSION = @PACKAGE_VERSION@

.SUFFIXES: .pc .cpp .c .o

CC=gcc
CXX=g++

MAKEMAKE=mm
MYCFLAGS=-DGNU_READLINE -DDEBUG_PRT -g3

SRCS=$(wildcard utils/*.cpp) $(wildcard erl/*.cpp) $(wildcard babysitter/*.cpp)
#// babysitter_utils.cpp comb_process.cpp bee.o test.cpp
OBJS=$(patsubst %.cpp, %.o, $(SRCS))
#//babysitter_utils.o comb_process.o bee.o test.o
EXES=$(patsubst bin/%.cpp.o, %.o, $(wildcard bin/*.cpp))

# For generating makefile dependencies..
SHELL=/bin/sh

CFLAGS+=$(MYCFLAGS) $(OS_DEFINES)
ALLLDFLAGS= $(LDFLAGS)

COMMONLIBS=-Lbuild/readline/lib/ -lstdc++ -lm -lreadline -lhistory
LIBS=$(COMMONLIBS)

all: $(MAKEMAKE) config_parser $(OBJS) $(EXES)

$(MAKEMAKE):
	@(rm -f $(MAKEMAKE))
	$(CXX) -M  $(INCLUDE) $(CPPFLAGS) $(SRCS) > $(MAKEMAKE)

$(EXES): $(OBJS) clean_bins
	@echo $(OBJS)
	@echo "Creating a executable $(subst ,,$(subst .cpp,,$@))"
	$(CXX) -c -o $*.o $(INCLUDE) $(CPPFLAGS) -I./src $@

clean_bins:
	@(rm -rf $(top_srcdir)/priv/bin/*)
	
bin/*.cpp.o: $(EXES)
	$(CXX) -o $@ $(subst .cpp,.o,$@) $(OBJS) $(ALLLDFLAGS) $(LIBS)

.cpp.o: $(SRCS) $(HDR)
	$(CXX) -c -o $*.o $(INCLUDE) $(CPPFLAGS) $*.cpp

.c.o: $(SRCS) $(HDR)
	$(CC) -c $(INCLUDE) $(CFLAGS) $*.c

config_parser:
	@(cd ./parser;$(MAKE)) # make the config parser

clean:
	rm -rf *.o *.o $(OBJS) $(MAKEMAKE) test/*.o run_tests

clean_deps:
	rm -rf  build/*

include Tests.makefile